sd2iec - a controller/interface adapting SD/MMC to the CBM serial bus
Copyright (C) 2007  Ingo Korb <ingo@akana.de>
Parts based on code from others, see comments in main.c for details.
crc7.c generated by pycrc, see comments in it for pycrc licence.

Free software under GPL version 2 ONLY, see comments in main.c and
COPYING for details.

FIXME:This file still needs to be expanded. A lot.

Introduction:
=============
sd2iec is a device for the Commodore serial bus that allows accessing an SD
or MMC card - think of it as a 1541 with a modern storage medium instead of
disks. The project was inspired by (and uses a few bits of code from)
MMC2IEC[1] by Lars Pontoppidan and runs on the same hardware.

Currently the compatibility is slightly higher than MMC2IEC 0.8, but there
are still lots of features missing. Anything that tries execute code on the
1541 will not work, this includes every software-fastloader.

[1] Homepage: http://pontoppidan.info/lars/index.php?proj=mmc2iec

Supported commands:
===================
- General notes:
  Any command not listed below is currently not supported.
  Long filenames are not supported.

  Subdirectory names in filenames are semi-supported, the syntax is not
  compatible to the CMD drives. The filenames are directly passed to the
  FAT library, so "/test/foo.bar" would access the file FOO.BAR in \TEST.

- Directory filters:
  To show only directories, both =B (CMD-compatible) and =D can be used.
  On a real Commodore drive D matches everything.
  To include hidden files in the directory, use *=H. On a 1541 this doesn't
  do anything. sd2iec marks hidden files with an H after the lock mark,
  i.e. "PRG<H" or "PRG H".

- CD/MD/RD:
  Subdirectory access is compatible to the syntax used by the CMD drives,
  although drive/partition numbers are completely ignored.

  Quick syntax overview:
    CD:_         changes into the parent dir (_ is the left arrow on the C64)
    CD:foo       changes into foo
    CD/foo       changes into foo
    CD:/foo      changes into foo
    CD://foo     changes into \foo
    CD//foo      changes into \foo
    CD/foo/:bar  changes into foo\bar, / before : is required
    CD/foo/bar   changes into foo\bar

    MD uses a syntax similiar to CD and will create the directory listed
    after the colon (:) relative to any directory listed before it.

    MD/foo/:bar  creates bar in foo
    MD//foo/:bar creates bar in \foo

    RD can only remove subdirectories of the current directory.

    RD:foo       deletes foo

  CD is also used to mount/unmount image files. Just change into them
  as if they were a directory and use CD:_ to leave. Please note that
  image files are detected by file extension only and there is no reliable
  way to see if a file is a valid image file.

- S:
  Name matching is fully supported, directories are ignored.

- UI+/UI-
  Switching the slightly faster bus protocol for the VC20 on and off works,
  it hasn't been tested much though.

- UI/UJ

- X: Extended commands. If you use JiffyDOS, you can send them by using
  @"X..." - without quotes you'll just receive an error.

  - XJ+/XJ-  Enable or disable JiffyDOS protocol support. Default state
             is disabled for now.

  - XCnum    Set oscillator calibration value to num (must be between
             0 and 255). Default is whatever your chip defaults to.

  - X        X without any following characters reports the current state
             of all extended parameters via the error channel, similiar
             to DolphinDOS. Example result: "03,J-:C152,00,00"

Software fastloaders:
=====================
There is currently support for one software fastloader in the code. It is
detected by the CRC of its 493 byte long floppy code and the M-E address
0x0303. I've seen the same code under multiple names, among them
"Turbodisk" (both 2.1 and 2.2) and "Fast-Load". Unfortunately the timing
requirements are extremely tight and cannot be met with the internal RC
oscillator of the AVR even if calibrated. You really need an external
8MHz crystal or the data read by the C64 will be gibberish.

JiffyDOS:
=========
The JiffyDOS protocol has very relaxed timing constraints compared to
Turbodisk, but still not as relaxed as the standard Commodore IEC protocol.
Jiffy seems to tolerate slightly mis-tuned RC oscillators, but you still
shouldn't expect it to work without oscillator calibration. If the
frequency error is too big you WILL get wrong data.

Other important notes:
======================
- File overwrite (@foo) is implemented by deleting the file first.
- File sizes in the directory are in blocks (of 254 bytes), but
  the blocks free message actually reports free clusters. It is
  a compromise of compatibility, accuracy and code size.

Compilation notes:
==================
sd2iec is set up to be compiled in multiple configurations, controlled by
variables supplied to the make command line.

The target chip must always be supplied by using either "make CHIP=m32"
for the ATmega32 or "make CHIP=m644" for the ATmega644.

By default the codes is configured for the I/O pin usage of the "Shadowwolf"
variant of the MMC2IEC board. If your circuit uses the original LarsP
circuit instead, add "LARSP=yes" to the make command line to change the
defaults. If you use a variant that is not covered by either of those options,
edit config.h yourself - the commented section is the one used by default.


